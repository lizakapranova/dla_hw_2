defaults:
  - model: rtfs
  - writer: wandb
  - metrics: train_eval
  - datasets: rtfs
  - dataloader: example
  - transforms: example_only_batch
  - _self_
optimizer:
  _target_: torch.optim.AdamW
  weight_decay: 0.1
  lr: 1e-4
lr_scheduler:
  _target_: torch.optim.lr_scheduler.OneCycleLR
  max_lr: 3e-4
  pct_start: 0.1
  steps_per_epoch: ${trainer.epoch_len}
  epochs: ${trainer.n_epochs}
  anneal_strategy: cos
loss_function:
  _target_: src.loss.SISNRLoss
trainer:
  log_step: 100
  n_epochs: 200
  epoch_len: null
  device_tensors: ["mix_audio", "speaker_audio", "video"] # which tensors should be on device (ex. GPU)
  resume_from: null # null or path to the checkpoint dir with *.pth and config.yaml
  device: auto # device name or "auto"
  override: True # if True, will override the previous run with the same name
  monitor: "off" # "off" or "max/min metric_name", i.e. our goal is to maximize/minimize metric
  save_period: 1 # checkpoint each save_period epochs in addition to the best epoch
  early_stop: ${trainer.n_epochs} # epochs for early stopping
  save_dir: "saved"
  seed: 1
  max_grad_norm: 10
  accumulating: null
